==oyster 0.4==

--Installation:--
Just untar oyster into a directory.


--Requirements--
For oyster.pl (the backend), you need mpg321 and/or ogg123 in $PATH.
For the GUI, you need an apache with the capability to execute perl-CGI, and
the following perl-modules:

- ...
- ...



--Configuration:--
Backend:
oyster searches for its config file in the directory where it is started - and
it has to be started from the dir where oyster.pl resides, because it won't
find its modules otherwise. ;)

oyster wants to have write access to the directory it is untar'ed. There may be
some strange effects if it doesn't.

There is a conf.sample in the tarfile, you cna rename it to oyster.conf and
edit it (don't use the default values, except you untar'ed oyster to /var/www/oyster).

At the moment, there are the following keywords in this file:

1. basedir: This is the directory where oyster has its temporary files and
	 pipes. It will be deleted when oyster quits.

2. savedir: oyster will save logs, playlists, blacklists, ... in this
	 directory. It won't be deleted automatically.

3. mediadir: oyster will only "work" on files below this directory. This is
	 where your music is.

4. theme: Here you can specify a theme for the GUI.

5. maxlastvotes: This specifies how many votes oyster saves. The probability
	 for files in this list to be played is higher. (see voteplay)

6. voteplay: The probability in percent that a file from lastvotes is played.

Frontend: (GUI)
The GUI searches for oyster.conf in the directory it is started.

--Enjoy--
That's it. Start oyster (via the GUI, or by hand with ``perl oyster.pl'') and
it will search in $mediadir for ogg and mp3 files, build a playlist and start
playing. 
